// <auto-generated />
using GestorDeDrones.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorDeDrones.Migrations
{
    [DbContext(typeof(DronesDbContext))]
    partial class DronesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("GestorDeDrones.Models.Accesorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnioCompra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CiclosDeCarga")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DroneId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.ToTable("Accesorios");
                });

            modelBuilder.Entity("GestorDeDrones.Models.Bateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnioCompra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CiclosDeCarga")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DroneId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.ToTable("Baterias");
                });

            modelBuilder.Entity("GestorDeDrones.Models.Drone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Peso")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("GestorDeDrones.Models.Mando", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnioCompra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CiclosDeCarga")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DroneId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.ToTable("Mandos");
                });

            modelBuilder.Entity("GestorDeDrones.Models.Accesorio", b =>
                {
                    b.HasOne("GestorDeDrones.Models.Drone", null)
                        .WithMany("Accesorios")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestorDeDrones.Models.Bateria", b =>
                {
                    b.HasOne("GestorDeDrones.Models.Drone", null)
                        .WithMany("Baterias")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestorDeDrones.Models.Mando", b =>
                {
                    b.HasOne("GestorDeDrones.Models.Drone", null)
                        .WithMany("Mandos")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestorDeDrones.Models.Drone", b =>
                {
                    b.Navigation("Accesorios");

                    b.Navigation("Baterias");

                    b.Navigation("Mandos");
                });
#pragma warning restore 612, 618
        }
    }
}
